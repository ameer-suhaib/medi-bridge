# Generated by Django 5.1.1 on 2025-01-18 18:19

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Doctor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "specialization",
                    models.CharField(
                        choices=[
                            ("Cardiology", "Cardiology"),
                            ("Dermatology", "Dermatology"),
                            ("Orthopedics", "Orthopedics"),
                            ("Neurology", "Neurology"),
                            ("Pediatrics", "Pediatrics"),
                            ("Gastroenterology", "Gastroenterology"),
                            ("Obstetrics and Gynecology", "Obstetrics and Gynecology"),
                            ("Endocrinology", "Endocrinology"),
                            ("Ophthalmology", "Ophthalmology"),
                            ("Psychiatry", "Psychiatry"),
                            ("Urology", "Urology"),
                            ("Rheumatology", "Rheumatology"),
                            ("Pulmonology", "Pulmonology"),
                            ("Hematology", "Hematology"),
                            ("Nephrology", "Nephrology"),
                            ("Radiology", "Radiology"),
                            ("Oncology", "Oncology"),
                            ("Plastic Surgery", "Plastic Surgery"),
                            ("Anesthesiology", "Anesthesiology"),
                            ("Emergency Medicine", "Emergency Medicine"),
                            ("Pathology", "Pathology"),
                            ("Family Medicine", "Family Medicine"),
                            ("Geriatrics", "Geriatrics"),
                            ("Infectious Disease", "Infectious Disease"),
                            ("Sports Medicine", "Sports Medicine"),
                            ("Allergy and Immunology", "Allergy and Immunology"),
                            ("Vascular Surgery", "Vascular Surgery"),
                            ("Clinical Genetics", "Clinical Genetics"),
                            ("Occupational Medicine", "Occupational Medicine"),
                            ("Pain Medicine", "Pain Medicine"),
                        ],
                        default="Cardiology",
                        max_length=250,
                    ),
                ),
                (
                    "qualification",
                    models.CharField(
                        choices=[
                            ("MBBS", "MBBS"),
                            ("MD", "MD"),
                            ("MS", "MS"),
                            ("MCh", "MCh"),
                            ("DNB", "DNB"),
                            ("DGO", "DGO"),
                            ("MDS", "MDS"),
                            ("DPM", "DPM"),
                            ("FRCS", "FRCS"),
                            ("DM", "DM"),
                        ],
                        default="MBBS",
                        max_length=250,
                    ),
                ),
                ("experience", models.PositiveIntegerField()),
                ("hospital_name", models.CharField(max_length=250)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TimeSlot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "day",
                    models.CharField(
                        choices=[
                            ("Monday", "monday"),
                            ("Tuesday", "tuesday"),
                            ("Wednesday", "wednesday"),
                            ("Thursday", "thursday"),
                            ("Friday", "friday"),
                            ("Saturday", "saturday"),
                            ("Sunday", "sunday"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "time_block",
                    models.CharField(
                        choices=[
                            ("08:00-10:00", "8:00 AM - 10:00 AM"),
                            ("10:00-12:00", "10:00 AM - 12:00 PM"),
                            ("12:00-14:00", "12:00 PM - 2:00 PM"),
                            ("14:00-16:00", "2:00 PM - 4:00 PM"),
                            ("16:00-18:00", "4:00 PM - 6:00 PM"),
                            ("18:00-20:00", "6:00 PM - 8:00 PM"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "max_appointments",
                    models.PositiveIntegerField(
                        default=4,
                        help_text="Maximum number of appointments per two-hour block",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                ("is_available", models.BooleanField(default=True)),
                (
                    "doctor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="time_slots",
                        to="doctors.doctor",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Time Slots",
                "unique_together": {("doctor", "day", "time_block")},
            },
        ),
    ]
